name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  DATABASE_URL: ${{ secrets.DATABASE_URL }}

jobs:
  build_and_test:

    runs-on: ubuntu-latest

    steps:
    # Setup Docker Compose
    - uses: actions/checkout@v3
    - name: Set up Docker Compose
      uses: isbang/compose-action@v1.4.1
      with:
        compose-file: "./docker-compose.yml"
    - name: Build and run Docker Compose Service
      run: docker-compose up -d

    # Setup Rust (using database)
    - name: set nightly toolchain
      run: rustup toolchain install nightly && rustup default nightly
    - name: Add sqlx
      run: cargo install sqlx-cli --no-default-features --features postgres
    - name: Database migration
      run: sqlx db create; sqlx migrate run
    # Setup Rust (Coverage)
    - name: install grcov
      run: cargo install grcov
    - name: Generate coverage report
      run: |
        export CARGO_INCREMENTAL=0
        export RUSTFLAGS="-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off"
        cargo build --verbose
        cargo test --verbose
        zip -0 ccov.zip `find . \( -name "rusty_money*.gc*" \) -print`;
        grcov ccov.zip -s . -t lcov --llvm --branch --ignore-not-existing --ignore "/*" -o lcov.info;
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3.1.0
      with:
        files: lcov.info
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}

    # Shut down Docker Compose (Clean up)
    - name: Shut down Docker Compose services
      run: docker-compose down
