name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  DATABASE_URL: ${{ secrets.DATABASE_URL }}

jobs:
  build_and_test:

    runs-on: ubuntu-latest

    steps:
    # Setup Docker Compose
    - uses: actions/checkout@v3
    - name: Set up Docker Compose
      uses: isbang/compose-action@v1.4.1
      with:
        compose-file: "./docker-compose.yml"

    # Cache dependencies
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo- 
    - name: Cache cargo index
      uses: actions/cache@v3
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    - name: Cache cargo build
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    - name: Build and run Docker Compose Service
      run: docker-compose up -d

    # Setup Rust (using database)
    - name: set nightly toolchain
      run: rustup toolchain install nightly && rustup default nightly
    - name: Add sqlx
      uses: baptiste0928/cargo-install@v2
      with:
        crate: sqlx-cli
    - name: Database migration
      run: sqlx db create; sqlx migrate run
    # Setup Rust (Coverage)
    - uses: actions-rs/cargo@v1
      with:
        command: test
        args: --all-features --no-fail-fast
      env:
        CARGO_INCREMENTAL: '0'
        RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
        RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
    - id: coverage
      uses: actions-rs/grcov@v0.1.6
    - name: Coveralls upload
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: ${{ steps.coverage.outputs.coverage-report }}

    # Shut down Docker Compose (Clean up)
    - name: Shut down Docker Compose services
      run: docker-compose down
